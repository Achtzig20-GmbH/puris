#
# Copyright (c) 2023, 2024 Volkswagen AG
# Copyright (c) 2023, 2024 Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. (represented by Fraunhofer ISST)
# Copyright (c) 2023, 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
version: "3"
services:

  postgres-customer:
    image: postgres:15.4-alpine
    container_name: customer-postgres
    environment:
      POSTGRES_DB: edc
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PW}
    ports:
      - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -d edc -U ${PG_USER}"]
      interval: 4s
      timeout: 3s
      retries: 15
    networks:
      - miw-net
    deploy:
      resources:
        limits:
          memory: 512mb
          cpus: "0.5"
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./postgres/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  edc-customer-control-plane:
    depends_on:
      postgres-customer:
        condition: service_healthy
    #    restart: on-failure
    extends:
      file: ./tractus-x-edc/docker-compose.yaml
      service: control-plane
    container_name: customer-control-plane
    env_file:
      - ./tractus-x-edc/config/customer/control-plane.properties
    environment:
      # bdrs client
      TX_IAM_IATP_BDRS_SERVER_URL: http://brds:8582/api/directory
      TX_IAM_IATP_BDRS_CACHE_VALIDITY: 600
      # iatp / dim
      EDC_IAM_ISSUER_ID: did:web:edr-service/customer #TODO fehlconfig?
      EDC_IAM_STS_OAUTH_TOKEN_URL: http://keycloak:8080/realms/miw_test/protocol/openid-connect/token
      EDC_IAM_STS_OAUTH_CLIENT_ID: ${CUSTOMER_OAUTH_CLIENT_ID}
      EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS: ${CUSTOMER_OAUTH_SECRET_ALIAS} #TODO
      EDC_IAM_STS_DIM_URL: http://edr-service:80/sts
      EDC_IAM_TRUSTED-ISSUER_PORTAL-ISSUER-ID_ID: did:web:edr-service/trusted-issuer
      # configure one Credential service for all (else pulled from did): https://github.com/eclipse-tractusx/tractusx-edc/blob/d7d3586ffc4ef03c858e38fde6bfa8687efa50c9/edc-extensions/bdrs-client/src/main/java/org/eclipse/tractusx/edc/identity/mapper/BdrsClientExtension.java#L50
      TX_IAM_IATP_CREDENTIALSERVICE_URL: http://edr-service:80
      # don't use https during did resolving in catalog request
      EDC_IAM_DID_WEB_USE_HTTPS: false
    #    environment:
    #      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
    #      SPRING_DATASOURCE_URL: jdbc:postgresql://supplier-postgres:5432/dtr_database
    #      SPRING_DATASOURCE_USERNAME: ${PG_USER}
    #      SPRING_DATASOURCE_PASSWORD: ${PG_PW}
    ports:
      - "127.0.0.1:8180:8180"
      - "127.0.0.1:8181:8181"
      - "127.0.0.1:8182:8182"
      - "127.0.0.1:8183:8183"
      - "127.0.0.1:8184:8184"
    networks:
      - miw-net
    extra_hosts:
      - "host.docker.internal:host-gateway" # Adjusts container's host file to allow for communication with docker-host machine

  #  edc-customer-data-plane:
  #    restart: on-failure
  #    extends:
  #      file: ./tractus-x-edc/docker-compose.yaml
  #      service: data-plane
  #    container_name: customer-data-plane
  #    ports:
  #      - "127.0.0.1:8280:8280"
  #      - "127.0.0.1:8285:8285"
  #      - "127.0.0.1:8299:8299"
  #    environment:
  #      edc.vault.hashicorp.token: ${VAULT_DEV_ROOT_TOKEN_ID}
  #    env_file:
  #      - ./tractus-x-edc/config/customer/data-plane.properties
  #    networks:
  #      - miw-net
  #    extra_hosts:
  #      - "host.docker.internal:host-gateway" # Adjusts container's host file to allow for communication with docker-host machine

  #  postgres-supplier:
  #    image: postgres:15.4-alpine
  #    container_name: supplier-postgres
  #    environment:
  #      POSTGRES_DB: puris-supplier
  #      POSTGRES_USER: ${PG_USER}
  #      POSTGRES_PASSWORD: ${PG_PW}
  #    ports:
  #      - "127.0.0.1:5435:5432"
  #    healthcheck:
  #      test: ["CMD-SHELL", "pg_isready -d puris-supplier -U ${PG_USER}"]
  #      interval: 4s
  #      timeout: 3s
  #      retries: 15
  #    networks:
  #      - miw-net
  #    deploy:
  #      resources:
  #        limits:
  #          memory: 512mb
  #          cpus: "0.5"
  #    security_opt:
  #      - no-new-privileges:true
  #    volumes:
  #      - ./postgres/init-dtr.sql:/docker-entrypoint-initdb.d/init-dtr.sql
  #
  edc-supplier-control-plane:
    depends_on:
      postgres-customer:
        condition: service_healthy
    #    restart: on-failure
    extends:
      file: ./tractus-x-edc/docker-compose.yaml
      service: control-plane
    container_name: supplier-control-plane
    ports:
      - "127.0.0.1:9180:9180"
      - "127.0.0.1:9181:9181"
      - "127.0.0.1:9182:9182"
      - "127.0.0.1:9183:9183"
      - "127.0.0.1:9184:9184"
      - "127.0.0.1:1044:1044"
    env_file:
      - ./tractus-x-edc/config/supplier/control-plane.properties
    environment:
      TX_IAM_IATP_BDRS_SERVER_URL: http://bdrs:8582/api/directory
      #      TX_IAM_IATP_BDRS_SERVER_URL: http://brds:8582
      TX_IAM_IATP_BDRS_CACHE_VALIDITY: 600
      # iatp / dim
      EDC_IAM_ISSUER_ID: did:web:edr-service/supplier
      # locally we don't actually care, because our dim service will accept all
      EDC_IAM_STS_OAUTH_TOKEN_URL: http://keycloak:8080/realms/miw_test/protocol/openid-connect/token
      EDC_IAM_STS_OAUTH_CLIENT_ID: ${SUPPLIER_OAUTH_CLIENT_ID}
      EDC_IAM_STS_OAUTH_CLIENT_SECRET_ALIAS: ${SUPPLIER_OAUTH_SECRET_ALIAS} #TODO
      EDC_IAM_STS_DIM_URL: http://edr-service:80/sts
      EDC_IAM_TRUSTED-ISSUER_PORTAL-ISSUER-ID_ID: did:web:edr-service/trusted-issuer
      # configure one Credential service for all (else pulled from did)
      TX_IAM_IATP_CREDENTIALSERVICE_URL: http://edr-service:80
      # don't use https during did resolving
      EDC_IAM_DID_WEB_USE_HTTPS: false
    networks:
      - miw-net
    extra_hosts:
      - "host.docker.internal:host-gateway" # Adjusts container's host file to allow for communication with docker-host machine
#
#
#  edc-supplier-data-plane:
#    restart: on-failure
#    extends:
#      file: ./tractus-x-edc/docker-compose.yaml
#      service: data-plane
#    container_name: supplier-data-plane
#    ports:
#      - "127.0.0.1:9280:9280"
#      - "127.0.0.1:9285:9285"
#      - "127.0.0.1:9299:9299"
#    environment:
#      edc.vault.hashicorp.token: ${VAULT_DEV_ROOT_TOKEN_ID}
#    env_file:
#      - ./tractus-x-edc/config/supplier/data-plane.properties
#    networks:
#      - miw-net
#    extra_hosts:
#      - "host.docker.internal:host-gateway" # Adjusts container's host file to allow for communication with docker-host machine

networks:
  miw-net:
    external: true
